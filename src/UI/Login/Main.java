/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.Login;
import Functions.Abstract_Functions;
import Functions_DB.Abstract_Functions_DB;
import java.awt.Color;


/**
 *
 * @author Cristian Cubias
 */
public class Main extends javax.swing.JFrame {
    
    Factory.Engine Factory = new Factory.Engine();
    Abstract_Functions Function;
    Abstract_Functions_DB FunctionDB;

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        
        //Iniciamos el Factory
        Function = Factory.StartFunctions(); //Iniciamos las funcionalidades generales del programa
        FunctionDB = Factory.StartFunctionsDB(); //Iniciamos las funcionalidades de la DB
        
        
        FunctionDB.SetUserHomeDirectory(); //Establecemos la carpeta home del usuario
        FunctionDB.SetOSName(); //Establecemos el nombre del OS del Usuario
        FunctionDB.SetAppFolder(FunctionDB.GetUserHomeDirectory(), "\\AppData\\Local\\SistemaContable"); //Establecemos la ruta de la aplicación
        
        TxtUserName.setBorder(null);
        TxtUserName.setOpaque(false);
        TxtUserName.setBackground(new Color(0,0,0,0));
        TxtUserName.setCaretColor(Color.WHITE);
        TxtUserName.setForeground(Color.WHITE);
        
        TxtPassword.setBorder(null);
        TxtPassword.setOpaque(false);
        TxtPassword.setBackground(new Color(0,0,0,0));
        TxtPassword.setCaretColor(Color.WHITE);
        TxtPassword.setForeground(Color.WHITE);


        //Este if sólo se encarga de conectar o crear la DB

        if(FunctionDB.SearchAppFolder(FunctionDB.GetAppFolder())) //Verifiamos si existe el directorio
         {
           FunctionDB.SetDBPath(FunctionDB.GetUserHomeDirectory() + "\\AppData\\Local\\SistemaContable\\SistemaContable.db"); //Establecemos la ruta de la DB
           if(FunctionDB.OpenConnection(FunctionDB.GetDBPath())) //Intentamos conectarnos con la DB si no se conecta, intenta crear el archivo.
           {
              if(FunctionDB.CreateDatabase()) //Aqui obtenemos el driver y metadatos de la DB
              {
                  
                FunctionDB.SetCreatedDB(true); //Establecemos que se ha creado la DB
              }
           }
           else
           {
               System.out.println("Se produjo un error en la conexión"); //Error de conexión
           }
         }
        else //Si no existe el directorio, entonces procedemos a crearlo
         {
            if(FunctionDB.CreateAppFolder(FunctionDB.GetAppFolder())) //Intenamos crear el directorio
            {
                /* Aquí se repite lo de arriba, establece una conexón y/o crea la DB */
                 FunctionDB.SetDBPath(FunctionDB.GetUserHomeDirectory() + "\\AppData\\Local\\SistemaContable\\SistemaContable.db");
                 if(FunctionDB.OpenConnection(FunctionDB.GetDBPath()))
                 {
                    if(FunctionDB.CreateDatabase())
                    {
                       
                        FunctionDB.SetCreatedDB(true);

                    }
                 }
                 else
                 {
                     System.out.println("Se produjo un error en la conexión");
                 }
            }
            else
            {
               System.out.println("No se pudo crear el directorio");
            }
        }
        FunctionDB.CloseConnection();
        
        if(FunctionDB.OpenConnection(FunctionDB.GetDBPath()))
        {
            if(FunctionDB.CreateUserTable() && 
            FunctionDB.CloseConnection() && 
            FunctionDB.OpenConnection(FunctionDB.GetDBPath()) && 
            FunctionDB.CreateBussinessTable() && 
            FunctionDB.CloseConnection())
            {
                System.out.println("Tablas creadas!!");
            }
            else
            {
                System.out.println("Se produjo un error al crear las tablas");
            }
            
        }
        else
        {
            System.out.println("Error de conexión");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TxtUserName = new javax.swing.JTextField();
        TxtPassword = new javax.swing.JPasswordField();
        BTN_Accept = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(400, 429));
        setPreferredSize(new java.awt.Dimension(400, 429));
        getContentPane().setLayout(null);

        TxtUserName.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        TxtUserName.setName("TxtUserName"); // NOI18N
        TxtUserName.setOpaque(false);
        TxtUserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtUserNameActionPerformed(evt);
            }
        });
        getContentPane().add(TxtUserName);
        TxtUserName.setBounds(90, 140, 240, 24);

        TxtPassword.setName("TxtPassword"); // NOI18N
        TxtPassword.setOpaque(false);
        getContentPane().add(TxtPassword);
        TxtPassword.setBounds(90, 220, 240, 22);

        BTN_Accept.setText("Login");
        BTN_Accept.setOpaque(false);
        BTN_Accept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_AcceptActionPerformed(evt);
            }
        });
        getContentPane().add(BTN_Accept);
        BTN_Accept.setBounds(30, 290, 150, 50);

        jButton2.setText("Registro");
        jButton2.setOpaque(false);
        getContentPane().add(jButton2);
        jButton2.setBounds(210, 290, 160, 50);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Login.png"))); // NOI18N
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, 0, 530, 410);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BTN_AcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_AcceptActionPerformed
       
       
       //Una vez verificado que se creó la DB procedemos a verificar el Login
       if(FunctionDB.GetCreatedDBState())
       {
           if(FunctionDB.SignIn(TxtUserName.getText() , String.valueOf(TxtPassword.getPassword())))
           {
                Function.ShowMessaje("Información", "Sesión iniciada correctamente, bienvenido, " + FunctionDB.GetUserName() , "Information");
           }
           else
           {
               Function.ShowMessaje("Información", "No se pudo iniciar sesión", "Error");
           }
       }
       else
       {
           
       }
       
    }//GEN-LAST:event_BTN_AcceptActionPerformed

    private void TxtUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtUserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtUserNameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Main().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTN_Accept;
    private javax.swing.JPasswordField TxtPassword;
    private javax.swing.JTextField TxtUserName;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
